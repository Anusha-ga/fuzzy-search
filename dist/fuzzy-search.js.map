{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap fb084af00b15f54e9bbf","webpack:///./src/fuzzy-search.js"],"names":["library","items","error","map","item","i","Array","isArray","id","string","search","term","lib","success","matches","exact","fuzzy","exactMatches","fuzzyMatches","exactFindExp","fuzzyFindExp","escapeExp","exactFindRegex","RegExp","replChars","split","join","fuzzyFindRegex","forEach","match","push","substringResult","getSubstrings","_matchType","_substrings","substrings","_score","score","count","concat","length","sort","sortByMatchScore","_regex","replace","regexString","matchString","regex","matchArray","exec","isMatch","missingCount","startsWith","str","a","b"],"mappings":"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","file":"fuzzy-search.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FS\"] = factory();\n\telse\n\t\troot[\"FS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fb084af00b15f54e9bbf\n **/","/*\n  library(terms)\n    take an array of strings, return a fuzzy lib to use in fuzzySearch\n  Usage\n  FS.library(['hello', 'lingo']]);\n*/\n\nconst library = (items) => {\n  let error;\n  items = items.map((item, i) => {\n    // if it is an array\n    if(Array.isArray(item)) {\n      error = `no arrays permitted: ${item}`;\n      return null;\n    // if it is a string\n    } else if(typeof item === 'string') {\n      return { id: i + 1, string: item };\n    // no string value\n    } else if(!item.string) {\n      error = `no string value: ${item}`;\n      return null;\n    // no id value\n    } else if(!item.id) {\n      item.id = i + 1;\n      return item;\n    } else {\n      return item;\n    }\n  });\n\n  if(error) return { error, items };\n  return items;\n};\n\n/*\n  FS.search(term, lib)\n    take a search term and an array of fuzzyObjects, return prioritized match arrays\n    exact array contains exact substring\n    fuzzy array contains partial substrings\n  {term} = search term\n  {lib}  = list of {id, string} to search\n  Usage\n  FS.search('lo', [{id: 1, string: 'hello'}, {id: 2, string: 'lingo'}]);\n*/\n\nexport const search = (term, lib) => {\n  // require params\n  if(!term) return { success: false, error: 'No term provided in FS.search(term, lib).' };\n  if(!lib)  return { success: false, error: 'No lib provided in FS.search(term, lib).' };\n\n  lib = library(lib);\n  if(lib.error) return { success: false, error: lib.error };\n\n  // destination of matches, to be iterated over and transformed into output matches\n  let matches = { exact: [], fuzzy: [] };\n  // temp destinations for matches\n  let exactMatches = [];\n  let fuzzyMatches = [];\n\n  // to be defined and returned in output\n  let exactFindExp = null;\n  let fuzzyFindExp = null;\n\n  // build replace regular expressions and vars\n  // exact: wrap exact match in span\n  // 'abc' => (.+)?(abc)(.+)?$\n  exactFindExp = `(.+)?(${escapeExp(term)})(.+)?$`;\n  let exactFindRegex = new RegExp(exactFindExp, 'g');\n\n  // fuzzy: wrapping first letter match in span for each letter\n  // 'abc' => (.+)?(a)(.+)?(b)(.+)?(c)(.+)?$\n  // term to array\n  // for each in array, wrap in () for regex grouping\n  let replChars = term.split('').map((i) => {\n    return `(${escapeExp(i)})`;\n  });\n\n  // join () groups with wildcard in-between groups\n  fuzzyFindExp = `(.+)?${replChars.join('(.+)?')}(.+)?$`;\n  let fuzzyFindRegex = new RegExp(fuzzyFindExp, 'g');\n\n  // find the matches in the library\n  lib.forEach((item) => {\n    if(item.string.match(exactFindRegex)) {\n      exactMatches.push(item);\n    } else if(item.string.match(fuzzyFindRegex)) {\n      fuzzyMatches.push(item);\n    }\n  });\n\n  // package the matches up\n  exactMatches.forEach((match) => {\n    // find the match\n    let substringResult = getSubstrings(exactFindExp, match.string);\n    match._matchType = 'exact',\n    match._substrings = substringResult.substrings,\n    match._score = substringResult.score\n    matches.exact.push(match);\n  });\n\n  fuzzyMatches.forEach((match) => {\n    // find the match\n    let substringResult = getSubstrings(fuzzyFindExp, match.string);\n    match._matchType = 'fuzzy',\n    match._substrings = substringResult.substrings,\n    match._score = substringResult.score\n    matches.fuzzy.push(match);\n  });\n\n  // output\n  return {\n    success: true,\n    count: matches.exact.concat(matches.fuzzy).length,\n    term: term,\n    exact: matches.exact.sort(sortByMatchScore),\n    fuzzy: matches.fuzzy.sort(sortByMatchScore),\n    _regex: {\n      exact: exactFindExp,\n      fuzzy: fuzzyFindExp\n    }\n  };\n};\n\n// escape regex-reserved chars\nconst escapeExp = (term) => {\n  return term.replace(/([\\/\\\\\\*\\?\\+\\.\\(\\)\\[\\]\\{\\}\\$\\!])/g, '\\\\$1');\n};\n\n// get substrings\nconst getSubstrings = (regexString, matchString) => {\n  let regex = new RegExp(regexString, 'g');\n  let matchArray = regex.exec(matchString);\n  let substrings = [];\n  let isMatch = false;\n  let missingCount = 0;\n  let startsWith = 0;\n  for(let i = 1; i < matchArray.length; i++) {\n    if(matchArray[i]) substrings.push({ str: matchArray[i], match: isMatch });\n    // if undefined and not first or last, add a point because it's a match combo\n    if(!matchArray[i] && i !== 1 && i !== matchArray.length - 1) missingCount++;\n    // if first is undefined, string starts with match\n    if(!matchArray[i] && i === 1) startsWith++;\n    isMatch = !isMatch;\n  }\n  return { substrings: substrings, score: missingCount + startsWith };\n};\n\n// sort matches by score descending\nconst sortByMatchScore = (a, b) => {\n  if (a._score < b._score)\n    return 1;\n  if (a._score > b._score)\n    return -1;\n  return 0;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/fuzzy-search.js\n **/"],"sourceRoot":""}